{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReduce.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06069f66.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n    eventLogout: '[event] Event Logout',\n\n    authCheckingFinish: '[auth] finish checking login state',\n    authStartLogin: '[auth] start login',\n    authLogin: '[auth] login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout'\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return {\n               ...initialState\n            }\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    \r\n    switch (action.type) {\r\n       case types.authLogin:\r\n           return {\r\n               ...state,\r\n               ...action.payload,\r\n               checking: false\r\n           }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReduce';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( (e) => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate()\r\n    }));\r\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n        \n        try {\n            const resp = await fetchWithToken('event', event, 'POST');\n            const body = await resp.json();\n            console.log(body)\n            if ( body.ok ) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                \n                dispatch( eventAddNew( event ) );\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    \n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const startEventUpdated = (event) => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchWithToken( `event/${ event.id }`, event, 'PUT');\n            const body = await resp.json();\n\n            console.log(body)\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async(dispatch, getState) => {\n        const {id} = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchWithToken( `event/${ id }`, {}, 'DELETE');\n            const body = await resp.json();\n\n            console.log(body)\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const eventLogout = () => ({type: types.eventLogout})\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchWithToken( 'event' );\n            const body = await resp.json();\n\n            // const events = body.events;\n            const events = prepareEvents( body.events );\n\n            dispatch( eventLoaded( events ) );\n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n}\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events   \n})\n\n\n","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            dispatch( checkingFinish() );\r\n        } \r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() )\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [ values, setValues ] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } )=>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth'\nimport './login.css';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail:'example@email.com',\n        lPassword: '123456'\n    });\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Robin',\n        rEmail:'rob@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    });\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const { lEmail, lPassword } = formLoginValues;\n     \n    const handleLogin = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ))\n        \n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas debe ser iguales.', 'error');\n        }\n\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n\n    }\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const { name } = useSelector( state => state.auth );\n\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\"> { name } </span>\n           \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }    \n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartNew, startEventUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( startEventUpdated( formValues ) )\n        } else {\n            dispatch( eventStartNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n       dispatch( eventStartLoading() );\n    }, [dispatch]);\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: (uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth );\n\n    useEffect(() => {\n\n        dispatch( startChecking() );\n    \n    }, [dispatch]);\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nconsole.log(process.env);\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}